<%- include('../components/common/head.ejs', { pageTitle: pageTitle }) %>
  <link rel="stylesheet" href="/styles/navbar.css">
  <link rel="stylesheet" href="/styles/socialbar.css">
  <script src="/scripts/navbar.js" defer></script>
  <link rel="stylesheet" href="/styles/gestor_equipos.css">
  <script src="/scripts/gestor-equipos.js" defer></script>
  </head>
  <body>
    <main>
      <h2 class="titulo_seccion">
      </h2>
      <div class="tab-labels">
        <div class="tab-label active" data-tab="tabla1" onclick="showTab('tabla1')">Equipos</div>
        <div class="tab-label" data-tab="tabla2" onclick="showTab('tabla2')">Elementos</div>
        <!-- Agrega más pestañas según sea necesario -->
      </div>
      <!-- Contenido de las pestañas -->
      <div class="tab-content active" id="tabla1">
        <div class="div-container">
          <!--
          <button id="mostrarFormulario" class="btn">Añadir nuevo equipo</button>-->
          <!--<form action="/gestor-equipos/agregarContador" method="POST" id="miFormulario" style="display: none;">
            <label for="selector">Selecciona una opción:</label>
            <select id="selector" name="tipoEquipo">
              <option value="contador">Contador</option>
              <option value="sensor">Sensor</option>
            </select>-->

          <!-- Campos para el contador -->
          <!--<div id="camposContador" style="display: none">
              <label for="IdeEle">IdeEle:</label>
              <input type="text" name="ideEle" required>
              <label for="calle_num">Calle/Nº:</label>
              <input type="text" name="calle_num" required>
              <label for="ideSector">IdeSector:</label>
              <input type="text" name="ideSector" required>
              <label for="ideTramo">IdeTramo:</label>
              <input type="text" name="ideTramo" required>
              <label for="ideRamal">IdeRamal:</label>
              <input type="text" name="ideRamal" required>
              <label for="ideRadio">IdeRadio:</label>
              <input type="text" name="ideRadio" required>
              <label for="marca">Marca:</label>
              <input type="text" name="ideRadio" required>
              <label for="dimension">Dimensión:</label>
              <input type="text" name="dimension" required>
              <label for="qnominal">Qnominal:</label>
              <input type="text" name="qnominal" required>
              <label for="volAsignado">Vol. Asignado:</label>
              <input type="text" name="volAsignado" required>
              <label for="coorX">Coordenada X:</label>
              <label for="coorX">Coordenada X:</label>
              <input type="text" name="coorX" required>
              <label for="coorY">Coordenada Y:</label>
              <input type="text" name="coorY" required>
              <label for="clientes">Clientes:</label>
              <select name="clientes">
                <% for(let cliente of clientes) { %>
                  <option value="<%= cliente.numero %>">
                    <%= cliente.nombre %>
                  </option>
                  <% } %>
              </select>
              <button type="submit" class="btn">Añadir</button>
            </div>-->

          <!-- Campos para el sensor -->
          <!-- <div id="camposSensor" style="display: none">
              <label for="IdeEle">IdeEle:</label>
              <input type="text" name="ideEle" required>
              <label for="ideSector">IdeSector:</label>
              <input type="text" name="ideSector" required>
              <label for="ideRadio">IdeRadio:</label>
              <input type="text" name="ideRadio" required>
              <select name="tipo">
                <option value="caudalimetro">caudalimetro</option>
                <option value="nivel">nivel</option>
                <option value="pluviometro">pluviómetro</option>
              </select>
              <label for="coorX">Coordenada X:</label>
              <input type="text" name="coorX" required>
              <label for="coorY">Coordenada Y:</label>
              <input type="text" name="coorY" required>
              <button type="submit" class="btn">Añadir</button>
            </div>

          </form>-->
          <div class="toolbar">
            <div class="toolbar-item">
              <label for="sector">Sector:</label>
              <select id="selectSector">
                <option value="">Todos</option>
                <% 
                // Crear un conjunto para almacenar los valores únicos de sector
                let sectoresSet = new Set();
                // Iterar sobre los contadores para añadir los valores únicos al conjunto
                for (let contador of contadores) {
                    sectoresSet.add(contador.sector);
                }
                // Iterar sobre los valores únicos del conjunto para generar las opciones
                for (let sector of sectoresSet) { %>
                    <option value="<%= sector %>"><%= sector %></option>
                <% } %>
            </select>
            </div>
            <div class="toolbar-item">
              <label for="tipo">Tipo:</label>
              <select id="selectTipo">
                <option value="">Todos</option>
                <% 
                // Crear un conjunto para almacenar los valores únicos de sector
                var tiposSet = new Set();
                // Iterar sobre los contadores para añadir los valores únicos al conjunto
                for (let contador of contadores) {
                  tiposSet.add(contador.tipo);
                }
                // Iterar sobre los valores únicos del conjunto para generar las opciones
                for (let sector of tiposSet) { %>
                    <option value="<%= sector %>"><%= sector %></option>
                <% } %>
            </select>
            </div>
            <div class="toolbar-item">
              <label for="estado">Estado:</label>
              <select id="selectEstado">
                <option value="">Todos</option>
                <% 
                // Crear un conjunto para almacenar los valores únicos de estado
                let estadosSet = new Set();
                // Iterar sobre los contadores para añadir los valores únicos al conjunto
                for (let contador of contadores) {
                    estadosSet.add(contador.estado);
                }
                // Iterar sobre los valores únicos del conjunto para generar las opciones
                for (let estado of estadosSet) { %>
                    <option value="<%= estado %>"><%= estado %></option>
                <% } %>
            </select>
            </div>
            <div class="toolbar-item">
              <label for="search">Buscar registro:</label>
              <input type="text" id="search" class="search-input" placeholder="Buscar">
            </div>
            <div class="toolbar-item">
              <button class="toolbar-btn" onclick="exportTableToExcel('equipos','Equipos')">
                <i class="fas fa-file-export"></i></i> <span>Excel</span>
            </button>
            </div>
          </div>
        </div>
        <div class="table-container">
          <table id="equipos">
            <thead>
              <tr>
                <th>Selección</th>
                <th>Identificador</th>
                <th>Sector</th>
                <th>Ide.Elemento</th>
                <th>Marca</th>
                <th>Modelo</th>
                <th>Dimensión</th>
                <th>Q.Nominal</th>
                <th>Tipo</th>
                <th>Titular</th>
                <th>Estado</th>
                <th>Acciones</th>
              </tr>
            </thead>
            <tbody id="table">
              <% for(let contador of contadores) { %>
                <tr data-uid="<%= contador.identificador %>">
                  <td>
                    <input type="checkbox" <%=contador.identificador ? 'checked' : '' %> >
                  </td>
                  <td>
                    <%= contador.identificador %>
                  </td>
                  <td contenteditable="true" class="editable" data-field="sector" data-id="<%= contador.ideElemento %>">
                    <%= contador.ideElemento %>
                  </td>
                  <td contenteditable="true" class="editable" data-field="sector" data-id="<%= contador.ideElemento %>">
                    <%= contador.sector %>
                  </td>
                  <td contenteditable="true" class="editable" data-field="marca" data-id="<%= contador.ideElemento %>">
                    <%= contador.marca %>
                  </td>
                  <td contenteditable="true" class="editable" data-field="modelo" data-id="<%= contador.ideElemento %>">
                    <%= contador.modelo %>
                  </td>
                  <td contenteditable="true" class="editable" data-field="dimension"
                    data-id="<%= contador.ideElemento %>">
                    <%= contador.dimension %>
                  </td>
                  <td contenteditable="true" class="editable" data-field="Qnominal"
                    data-id="<%= contador.ideElemento %>">
                    <%= contador.Qnominal %>
                  </td>
                  <td contenteditable="true" class="editable" data-field="tipo" data-id="<%= contador.ideElemento %>">
                    <%= contador.tipo %>
                  </td>
                  <td contenteditable="true" class="editable" data-field="titular"
                    data-id="<%= contador.ideElemento %>">
                    <%= contador.titular %>
                  </td>
                  <td contenteditable="true" class="editable" data-field="estado" data-id="<%= contador.ideElemento %>">
                    <%= contador.estado %>
                  </td>
                  <td>
                    <button class="btn" id="openHistorico">
                      <i class="fa fa-history"></i> Ver histórico
                    </button>
                    <button class="btn" onclick="updateContador('<%= contador.id %>')">
                      <i class="fa fa-sync"></i> Actualizar
                    </button>
                    <button class="btn red-btn" onclick="borrarContador('<%= contador.id %>')">
                      <i class="fa fa-trash"></i> Borrar
                    </button>
                  </td>
                </tr>
                <% } %>
            </tbody>
          </table>
        </div>
        <script> var todos = [];</script>
        <% for(let contador of todosLosContadores) { %>
          <script>
            todos.push({ id: '<%= contador.identificador %>' });
            //console.log(todos);
          </script>
          <% } %>
            <div class="div-container">
              <!-- Botones de paginación -->
            </div>
            <div class="pagination">
              <label for="page-selector">Página:</label>
              <select id="page-selector" onchange="window.location.href = '/gestor-equipos?page=' + this.value;">
                <% for (let i=1; i <=totalPages; i++) { %>
                  <option value="<%= i %>" <%=i===currentPage ? 'selected' : '' %>><%= i %>
                  </option>
                  <% } %>
              </select>
            </div>

      </div>
      </div>
      <div class="tab-content" id="tabla2">
        
        <!--Tabla sensores-->

        <div class="toolbar">
          <div class="toolbar-item">
            <label for="sector2">Sector:</label>
            <select id="sector2">
              <option value="">Todos</option>
            </select>
          </div>
          <div class="toolbar-item">
            <label for="tipoContador2">Tipo de Contador:</label>
            <select id="tipoContador2">
              <option value="">Todos</option>
            </select>
          </div>
             <div class="toolbar-item">
            <label for="operario2">Operario:</label>
            <select id="operario2">
              <option value="">Todos</option>
            </select>
          </div>
          <div class="toolbar-item">
            <label for="estado2">Estado:</label>
            <select id="estado2">
              <option value="">Todos</option>
            </select>
          </div>
          <div class="toolbar-item">
            <label for="search">Buscar registro:</label>
            <input type="text" id="search" class="search-input" placeholder="Buscar">
          </div>
          <div class="toolbar-item">
            <button class="toolbar-btn" onclick="exportTableToExcel('elementos','Elementos')">
              <i class="fas fa-file-export"></i></i> <span>Excel</span>
          </button>
          </div>
        </div>
        <div class="table-container">
          <table id="elementos">
            <thead>
              <tr>
                <th>Selección</th>
                <th>Identificador</th>
                <th>Sector</th>
                <th>Tipo</th>
                <th>Ide.Tramo</th>
                <th>Estado</th>
                <th>Observaciones</th>
                <th>Acciones</th>
              </tr>
            </thead>
            <tbody id="table">
              <% for(let contador of equipos) { %>
                <tr data-uid="<%= contador.identificador %>">
                  <td>
                    <input type="checkbox" <%=contador.identificador ? 'checked' : '' %> >
                  </td>
                  <td>
                    <%= contador.identificador %>
                  </td>
                  <td contenteditable="true" class="editable" data-field="sector" data-id="<%= contador.identificador %>">
                    <%= contador.sector %>
                  </td>
                  <td contenteditable="true" class="editable" data-field="tipo" data-id="<%= contador.identificador %>">
                    <%= contador.tipo %>
                  </td>
                  <td contenteditable="true" class="editable" data-field="marca" data-id="<%= contador.identificador %>">
                    <%= contador.tramo %>
                  </td>
                  <td contenteditable="true" class="editable" data-field="estado" data-id="<%= contador.identificador %>">
                    <%= contador.estado %>
                  </td>
                  <td contenteditable="true" class="editable" data-field="modelo" data-id="<%= contador.identificador %>">
                    <%= contador.observaciones %>
                  </td>
                  <td>
                    <button class="btn" id="openHistorico">
                      <i class="fa fa-history"></i> Ver histórico
                    </button>
                    <button class="btn" onclick="updateContador('<%= contador.id %>')">
                      <i class="fa fa-sync"></i> Actualizar
                    </button>
                    <button class="btn red-btn" onclick="borrarContador('<%= contador.id %>')">
                      <i class="fa fa-trash"></i> Borrar
                    </button>
                  </td>
                </tr>
                <% } %>
            </tbody>
          </table>
        </div>
        <% for(let sensor of todosLosElementos) { %>
          <script>
            todos.push({ id: '<%= sensor.id %>', sector: '<%= sensor.sector %>', tramo: '<%= sensor.tipo %>' });
            //console.log(todos);
          </script>
          <% } %>

              <!-- Botones de paginación -->
              
                <div class="pagination">
                    <label for="page-selector">Página:</label>
                    <select id="page-selector"
                      onchange="window.location.href = '/gestor-equipos?pageSensor=' + this.value;">
                      <% for (let i=1; i <=totalPagesSensor; i++) { %>
                        <option value="<%= i %>" <%=i===currentPageSensor ? 'selected' : '' %>><%= i %>
                        </option>
                        <% } %>
                    </select>
                  </div>
                </div>
      </div>
    </main>
    <script>
      //const mostrarFormularioButton = document.getElementById('mostrarFormulario');
      //const miFormulario = document.getElementById('miFormulario');

      //mostrarFormularioButton.addEventListener('click', () => {
      //  if (miFormulario.style.display === 'none') {
      //    miFormulario.style.display = 'block';
      //    if (selector.value === "contador") {
      //      camposContador.style.display = "block";
      //      camposSensor.style.display = "none";
      //    } else if (selector.value === "sensor") {
      //      camposContador.style.display = "none";
      //      camposSensor.style.display = "block";
      //    }
      //  } else {
      //    miFormulario.style.display = 'none';
      //  }
      //});


      // Obtener referencia a los selectores
      const selectSector = document.getElementById('selectSector');
      const selectEstado = document.getElementById('selectEstado');

      // Agregar evento change a cada selector
      selectSector.addEventListener('change', filtrarContadores);
      selectEstado.addEventListener('change', filtrarContadores);

      function filtrarContadores() {
        // Obtener valores seleccionados
        const sectorSeleccionado = selectSector.value;
        const estadoSeleccionado = selectEstado.value;

        // Filtrar contadores según los valores seleccionados
        const filasContadores = document.querySelectorAll('#table tbody tr');

        filasContadores.forEach(fila => {
          const sectorFila = fila.querySelector('[data-field="sector"]').textContent;
          const estadoFila = fila.querySelector('[data-field="estado"]').textContent;

          if ((sectorSeleccionado === '' || sectorFila === sectorSeleccionado) &&
            (estadoSeleccionado === '' || estadoFila === estadoSeleccionado)) {
            fila.style.display = ''; // Mostrar fila
          } else {
            fila.style.display = 'none'; // Ocultar fila
          }
        });
      }
    </script>
    <!-- Script para la búsqueda en tiempo real -->
              <script>
                //Solo busca en la página actual
                document.addEventListener("DOMContentLoaded", function () {
                  const searchInput = document.getElementById("search");

                  searchInput.addEventListener("keyup", function () {
                    const searchTerm = this.value.toLowerCase();

                    // Accede a la variable de Node.js (miVariable) y asígnala a una variable de JavaScript

                    console.log("todos " + todos[0].id);
                    /*var contadores = <%= JSON.stringify(todosLosContadores)%>;
                    contadores=contadores.replace("&#34;", "'");
          
                    var primerObjeto = contadores[0];
                    console.log('ID del primer objeto:', primerObjeto.id);
                    console.log('sector del primer objeto:', primerObjeto.sector);
                    console.log('tramo del primer objeto:', primerObjeto.tramo);
                  
          
          */
                    var found = false;
                    for (var i = 0; i < todos.length; i++) {
                      //console.log("contador['id'] " + todos[i].id + " " + searchTerm);
                      if ((todos[i].id.toLowerCase()).includes(searchTerm)) {
                        found = true;
                        break;
                      }

                    }
                    if (found) {
                      var pagina = (i / 10) + 1;
                      console.log("Página: " + parseInt(pagina));
                      location.href = "/gestor-equipos?page=" + parseInt(pagina);
                      //row.style.display = "";
                    } else {
                      //row.style.display = "none";
                    }

                    /*<% for (let contador of todosLosContadores) { %>
                      if (contador.id.includes(searchTerm)) {
                          found = true;
                          break;
                        }
                    <% } %>
            
                    if (found) {
                        row.style.display = "";
                      } else {
                        row.style.display = "none";
                      }
                      */
                  });
                });
              </script>
              <script>
                document.getElementById('openHistorico').addEventListener('click', function () {
                  // Obtén las dimensiones de la ventana del navegador
                  var windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
                  var windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;

                  // Calcula las coordenadas para centrar la ventana emergente
                  var left = (windowWidth - 800) / 2;
                  var top = (windowHeight - 650) / 2;

                  // Abre la ventana emergente en el centro de la pantalla
                  window.open('/gestor-equipos/historico', 'Popup', 'width=700,height=550,left=' + left + ',top=' + top);

                });
                
              </script>
              <script>
                // Función para mostrar la pestaña seleccionada
                function showTab(tabId) {
                  const tabs = document.querySelectorAll('.tab-content');
                  tabs.forEach(tab => tab.classList.remove('active'));
                  document.getElementById(tabId).classList.add('active');

                  const tabLabels = document.querySelectorAll('.tab-label');
                  tabLabels.forEach(label => label.classList.remove('active'));
                  const activeLabel = document.querySelector(`.tab-label[data-tab="${tabId}"]`);
                  activeLabel.classList.add('active');
                }
              </script>
              <script>

                /*const selector = document.getElementById("selector");
                const camposContador = document.getElementById("camposContador");
                const camposSensor = document.getElementById("camposSensor");

                selector.addEventListener("change", function () {
                  if (selector.value === "contador") {
                    camposContador.style.display = "block";
                    camposSensor.style.display = "none";
                  } else if (selector.value === "sensor") {
                    camposContador.style.display = "none";
                    camposSensor.style.display = "block";
                  }
                });*/

              </script>
              <script>
                function exportToExcel() {
                  // Aquí puedes implementar la lógica para exportar a Excel
                  // Por ejemplo, puedes usar una librería como SheetJS: https://sheetjs.com/
                  // O puedes crear un archivo CSV con los datos y forzar la descarga del mismo
                  alert("Función de exportar a Excel");
                }

              </script>

              <!--
//Código para exportar una tabla a excel

const excel = require('exceljs');
// Ruta para renderizar la página con la tabla HTML
app.get('/generar-excel', (req, res) => {
  // Supongamos que tienes una página HTML con una tabla
  const htmlContent = `
    <html>
      <head>
        <title>Tabla HTML a Excel</title>
      </head>
      <body>
        <table>
          <tr>
            <th>Nombre</th>
            <th>Edad</th>
          </tr>
          <tr>
            <td>Juan</td>
            <td>25</td>
          </tr>
          <tr>
            <td>María</td>
            <td>30</td>
          </tr>
          <tr>
            <td>Luis</td>
            <td>28</td>
          </tr>
        </table>
      </body>
    </html>
  `;

  // Crear un nuevo archivo Excel
  const workbook = new excel.Workbook();
  const worksheet = workbook.addWorksheet('TablaHTML');

  // Extraer la tabla HTML y convertirla en datos de Excel
  worksheet.views = [
    { state: 'frozen', xSplit: 0, ySplit: 1, activeCell: 'B2' },
  ];
  worksheet.eachRow({ includeEmpty: false }, (row, rowNumber) => {
    const tr = ejs.render(htmlContent, {
      nombre: row.getCell(1).value,
      edad: row.getCell(2).value,
    });
    const div = document.createElement('div');
    div.innerHTML = tr;
    const cells = div.querySelectorAll('td, th');
    cells.forEach((cell, columnIndex) => {
      row.getCell(columnIndex + 1).value = cell.textContent;
    });
  });

  // Configurar la respuesta HTTP para descargar el archivo Excel
  res.setHeader('Content-Type', 'application/vnd.openxmlformats');
  res.setHeader('Content-Disposition', 'attachment; filename=tabla_html.xlsx');

  // Generar y enviar el archivo Excel como respuesta
  workbook.xlsx.write(res)
    .then(() => {
      res.end();
    })
    .catch((error) => {
      console.error('Error al generar el archivo Excel', error);
      res.status(500).send('Error al generar el archivo Excel');
    });
});


    -->
    <%- include('../components/common/footer.ejs') %>
  </body>